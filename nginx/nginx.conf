events {
    worker_connections 1024;
}

# HTTP와 HTTPS 트래픽을 처리하기 위한 설정
http {
    # 기타 http 설정...

    # HTTP 서버 블록: 80 포트에서 HTTP 트래픽을 수신
    # 사용자가 HTTP로 접속할 경우 HTTPS로 리다이렉트
    server {
        listen 80;
        listen [::]:80;
        server_name ${DOMAIN};  # 도메인 설정

        # 모든 HTTP 트래픽을 HTTPS로 리다이렉트
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name signforall.kro.kr;

    ssl_certificate /etc/letsencrypt/live/signforall.kro.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/signforall.kro.kr/privkey.pem;

    location / {
        root /home/ubuntu/react_app_practice/build;
        try_files $uri $uri/ /index.html;
    }

    location /dev/ {
        proxy_pass http://localhost:3000/dev/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Accept-Encoding gzip;
    }

    location /code/ {
        proxy_pass http://localhost:8080/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header Accept-Encoding gzip;
        client_max_body_size 50M;
    }
    
    location /pb/ {
        proxy_pass http://pocketbase:8090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 불필요한 User Agent 차단
    if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
        return 403;
    }

    # 숨김 파일 접근 차단
    location ~ /\.(?!well-known) {
        deny all;
    }

    # telescope 요청 차단
    location ~ /telescope/requests {
        deny all;
    }

    # 특정 HTTP 메서드 차단
    location / {
        if ($request_method !~ ^(GET|POST|HEAD)$ ) {
            return 444;
        }
    }

    # SSL/TLS 설정 강화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Content-Security-Policy "default-src 'self';";

     # Gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

