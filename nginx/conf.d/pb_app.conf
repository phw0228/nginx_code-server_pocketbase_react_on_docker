# HTTP 서버 블록
server {
    listen 80;
    listen [::]:80;  # IPv6 주소에 대한 대응

    server_name ${DOMAIN};  # 도메인 변수

    # Let's Encrypt 인증을 위한 설정
    location /.well-known/ {
        root /var/lib/certbot;
    }

    # 모든 HTTP 요청을 HTTPS로 리다이렉트
    location / {
        return 301 https://${DOMAIN}${DOLLAR}request_uri;
    }
}

# HTTPS 서버 블록
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name ${DOMAIN};  # 도메인 변수

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN}/chain.pem;

    # 보안 헤더 추가
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';";

    # 로그 설정
    access_log /var/log/nginx/${DOMAIN}.access.log;
    error_log /var/log/nginx/${DOMAIN}.error.log warn;

    # 메인 애플리케이션 프록시 설정
    location / {
        proxy_http_version 1.1;
        proxy_cache_bypass ${DOLLAR}http_upgrade;

        # 불필요한 헤더 숨기기
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        proxy_hide_header X-AspNetMvc-Version;
        proxy_hide_header X-AspNet-Version;

        # 프록시 헤더 설정
        proxy_set_header Proxy "";
        proxy_set_header Upgrade ${DOLLAR}http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host ${DOLLAR}host;
        proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;
        proxy_set_header X-Forwarded-Host ${DOLLAR}host;
        proxy_set_header X-Forwarded-Port ${DOLLAR}server_port;

        # PocketBase 앱으로의 요청 프록시
        proxy_pass http://localhost:8090;
    }

    # 정적 파일 처리 설정
    location ~* \.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|woff2|svg)${DOLLAR} {
        expires 7d;
        add_header Pragma public;
        add_header Cache-Control public;

        # PocketBase 앱으로의 요청 프록시
        proxy_pass http://localhost:8090;
    }

    # 불필요한 User Agent 차단
    if (${DOLLAR}http_user_agent ~* LWP::Simple|BBBike|wget) {
        return 403;
    }

    # 숨김 파일 접근 차단
    location ~ /\.(?!well-known) {
        deny all;
    }

    # telescope 요청 차단
    location ~ /telescope/requests {
        deny all;
    }

    # 특정 HTTP 메서드 차단
    location / {
        if ($request_method !~ ^(GET|POST|HEAD)$ ) {
            return 444;
        }
    }

    # SSL/TLS 설정 강화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Content-Security-Policy "default-src 'self';";

    # 사용자 지정 오류 페이지
    error_page 403 /custom_403.html;
    error_page 404 /custom_404.html;

    # Gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
}
